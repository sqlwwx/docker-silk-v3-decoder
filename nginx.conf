worker_processes  1;        #nginx worker 数量
error_log logs/error.log;   #指定错误日志文件路径
user root;
events {
    worker_connections 1024;
}

http {
  # 建议和打开文件数一致，inactive 是指经过多长时间文件没被请求后删除缓存。
  open_file_cache max=204800 inactive=20s;

  # open_file_cache 指令中的inactive 参数时间内文件的最少使用次数，
  # 如果超过这个数字，文件描述符一直是在缓存中打开的，如上例，如果有一个
  # 文件在inactive 时间内一次没被使用，它将被移除。
  open_file_cache_min_uses 1;

  # 这个是指多长时间检查一次缓存的有效信息
  open_file_cache_valid 30s;
  # 默认情况下，Nginx的gzip压缩是关闭的， gzip压缩功能就是可以让你节省不
  # 少带宽，但是会增加服务器CPU的开销哦，Nginx默认只对text/html进行压缩 ，
  # 如果要对html之外的内容进行压缩传输，我们需要手动来设置。
  gzip on;
  gzip_min_length 1k;
  gzip_buffers 4 16k;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_types text/plain application/x-javascript text/css application/xml;

  # 这里设置为 off，是为了避免每次修改之后都要重新 reload 的麻烦。
  # 在生产环境上务必确保 lua_code_cache 设置成 on。
  # lua_code_cache off;
  lua_code_cache on;
  server {
    # server_name www.example.com;
    listen 80;
    root /silk2mp3/files;

    # location ^~ /silk/ {
    location ~ /silk/([a-zA-Z0-9-_]+) {
      default_type  text/plain;
      set $silkId $1;
      content_by_lua_file /usr/local/openresty/site/lualib/silk2mp3/index.lua;
    }
  }
}
